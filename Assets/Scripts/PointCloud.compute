#include "Noise.compute"

#pragma kernel GeneratePoints

RWStructuredBuffer<float4> points;

int numPointsPerAxis;

// noise settings
int octaves;
float lacunarity;
float gain;
float scale;

float remap(float v, float minOld, float maxOld, float minNew, float maxNew) {
    return saturate(minNew + (v-minOld) * (maxNew - minNew) / (maxOld-minOld));
}

float fbm(float3 x)
{
    float value = 0.0;
    float amplitude = 1;
    float frequency = 1;
    
    for (int i = 0; i < octaves; i++) {
        
        value += amplitude * snoise(frequency * x);
        amplitude *= gain;
        frequency *= lacunarity;
    }
    return value;
}

[numthreads(8,8,8)]
void GeneratePoints(uint3 id : SV_DispatchThreadID)
{
    int index = id.z * numPointsPerAxis * numPointsPerAxis + id.y * numPointsPerAxis + id.x;
    float3 p = float3(id.x, id.y, id.z);
    float n = fbm(p / scale);

    n = remap(n, -1, 1, 0, 1) * 32 - (id.y + 2) +
        (id.y % 16) * 1.2;
    
    points[index] = float4(p, n);
}
